#+TITLE: Emacs Configuration
#+AUTHOR: Ming
#+DATE: 2025
#+DESCRIPTION: A Emacs configuration
#+OPTIONS: toc:2 num:nil
#+STARTUP: showeverything

* Ming's Emacs Configuration

This is a modern, vanilla Emacs configuration that prioritizes simplicity, performance, and maintainability. It follows Emacs best practices while providing a modular structure.

** Philosophy

*** Built-in First
- Prefer Emacs built-in packages over external alternatives
- Use ~use-package~ for external packages with ~:ensure t~
- Leverage modern Emacs features (tree-sitter, eglot, etc.)

*** Minimal Complexity
- Core settings live directly in ~init.el~
- Modular structure only where it provides clear benefits
- No unnecessary abstractions or complex loading systems
- Readable, self-documenting code

*** Performance Oriented
- Optimized startup with ~early-init.el~
- Lazy loading where appropriate
- Minimal package dependencies
- Efficient completion stack (vertico, corfu, marginalia)

*** Modern Development
- LSP integration via built-in ~eglot~
- Tree-sitter for syntax highlighting (Emacs 29+)
- Contemporary completion UI
- Git integration with Magit

** Supported Languages

The project uses the treesitter mode for languges, e.g. "js-ts-mode" for javascript.

Please install related treesitter library:

~M-x~  ~treesit-install-language-grammar~

** Required Dependencies

*** Language Servers

Install these for full language support:

#+BEGIN_SRC bash
# C/C++
sudo apt install clangd  # or brew install llvm

# Python  
pip install python-lsp-server[all] ruff black isort

# Rust
rustup component add rust-analyzer rustfmt clippy

# JavaScript/TypeScript
npm install -g typescript-language-server typescript prettier

# Go
go install golang.org/x/tools/gopls@latest
go install golang.org/x/tools/cmd/goimports@latest
#+END_SRC

** Troubleshooting

*** Common Issues

- *LSP not starting*: Check if language server is installed and in PATH
- *Packages not installing*: Check network connection and package archives
- *Keybinding conflicts*: Use ~C-h k~ to check existing bindings

*** Configuration Changes Not Work

- *Manual reload required*:  Hot reloading is not supported.
- *Restart Buffer*: Buffers contain loaded local variables, restart buffer to flush them.
  Use ~M-x revert-buffer~ to restart buffers, or kill and reopen buffers
- *Feature name unique*: Make the feature named by ~provide~ is unique.
  Use ~M-x describe-variable RET features RET~ to check all features.
  
*** Debugging

- *Check ~*Messages*~ buffer* for error messages
- *Use ~emacs --debug-init~* for startup issues
- *Check LSP status* with ~M-x eglot-events-buffer~

*** Getting Help

- *Built-in help*: ~C-h~ prefix commands
- *Package documentation*: ~C-h P <package-name>~
- *Function help*: ~C-h f <function-name>~
- *Variable help*: ~C-h v <variable-name>~

** Contributing

*** Code Style

- Use ~lexical-binding: t~ in all files
- Include proper file headers with description
- Group related configurations together
- Comment complex or non-obvious configurations
- Use consistent indentation (2 spaces for Lisp)
- Prefer ~use-package~ for external packages with ~:ensure t~
- Use ~setq-default~ for global defaults, ~setq~ for local settings
- Keep line length under 80 characters where practical

